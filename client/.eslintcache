[{"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\reportWebVitals.js":"1","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\protected-routes\\protected-routes.js":"2","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Not-found-error\\index.js":"3","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\hooks\\use-request.js":"4","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Auth\\register\\index.js":"5","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Dashboard\\common\\Nav\\index.js":"6","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Auth\\index.js":"7","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Auth\\login\\index.js":"8","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Dashboard\\Agent\\create-request\\index.js":"9","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\App.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1104,"mtime":1606418414852,"results":"13","hashOfConfig":"12"},{"size":523,"mtime":1606418414428,"results":"14","hashOfConfig":"12"},{"size":808,"mtime":1606421232666,"results":"15","hashOfConfig":"12"},{"size":5302,"mtime":1606420349341,"results":"16","hashOfConfig":"12"},{"size":3304,"mtime":1606418414313,"results":"17","hashOfConfig":"12"},{"size":350,"mtime":1606420289049,"results":"18","hashOfConfig":"12"},{"size":3936,"mtime":1606420317388,"results":"19","hashOfConfig":"12"},{"size":3920,"mtime":1606421342814,"results":"20","hashOfConfig":"12"},{"size":217,"mtime":1606418860030,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bkz24t",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\reportWebVitals.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\protected-routes\\protected-routes.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Not-found-error\\index.js",["43"],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\hooks\\use-request.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Auth\\register\\index.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Dashboard\\common\\Nav\\index.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Auth\\index.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Auth\\login\\index.js",[],"D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\components\\Dashboard\\Agent\\create-request\\index.js",["44"],"import React, { useState } from 'react';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n// COMPONENTS\r\nimport useRequest from '../../../../hooks/use-request';\r\nimport classes from './index.module.css';\r\nimport Nav from '../../common/Nav';\r\n\r\n\r\nconst CreateRequest = ({ user, role }) => {\r\n    const history = useHistory();\r\n\r\n    const [customer, setCustomer] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [ duration, setDuration ] = useState('Admin');\r\n\r\n    // useRequest\r\n    const { doRequest, errors } = useRequest({\r\n        path: '/api/loan/create-request',\r\n        method: 'post',\r\n        body: {\r\n            amount,\r\n            customer,\r\n            duration\r\n        },\r\n        onSuccess: () => history.push(\"/login\")\r\n    });\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await doRequest();\r\n    }\r\n\r\n    const onSetCustomer = (e) => {\r\n        setCustomer(e.target.value);\r\n    }\r\n    const onSetAmount = (e) => {\r\n        setAmount(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Helmet>\r\n                <meta charSet=\"utf-8\" />\r\n                <title>Loan App - Create Loan Request</title>\r\n            </Helmet>\r\n            <Nav user={user} role={role}/>\r\n            <div className={classes.loan}>\r\n                <form method=\"POST\"\r\n                    className={classes.loanForm}\r\n                    autoComplete=\"off\"\r\n                    onSubmit={onSubmit}>\r\n                    <div className={classes.welcome}>\r\n                        <h1 align=\"center\">CREATE LOAN REQUEST</h1>\r\n                    </div>\r\n\r\n                    <div className={classes.loanFormInputCustom}>\r\n                        <label htmlFor=\"customer\">customer</label>\r\n                        <input\r\n                            id=\"customer\"\r\n                            type=\"text\"\r\n                            name=\"customer\"\r\n                            placeholder=\"Enter customer\"\r\n                            onChange={onSetCustomer}\r\n                            value={customer} />\r\n                    </div>\r\n\r\n                    <div className={classes.loanFormInputCustom}>\r\n                        <label htmlFor=\"amount\">amount</label>\r\n                        <input\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            name=\"amount\"\r\n                            placeholder=\"Enter amount\"\r\n                            onChange={onSetAmount}\r\n                            value={amount} />\r\n                    </div>\r\n\r\n                    <div className={classes.loanSelect}>\r\n                        <label htmlFor=\"duration\">duration (in months)</label>\r\n                        <select value={duration} onChange={(e) => setDuration(e.target.value)}>\r\n                            <option>2</option>\r\n                            <option>4</option>\r\n                            <option>6</option>\r\n                            <option>8</option>\r\n                            <option>10</option>\r\n                            <option>12</option>\r\n                        </select>\r\n                    </div>\r\n                    {\r\n                        errors &&\r\n                        <div>\r\n                            {\r\n                                errors.map((error, index) => {\r\n                                    return <p className={classes.errorMessage} key={index}> {error.msg} </p>\r\n                                })\r\n                            }\r\n                        </div>\r\n                    }\r\n\r\n                    <div className={classes.loanButton}>\r\n                        <button>Create Request</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CreateRequest;","D:\\OTHER\\company-tasks\\red-carpet\\client\\src\\App.js",[],{"ruleId":"45","severity":1,"message":"46","line":12,"column":13,"nodeType":"47","endLine":16,"endColumn":44},{"ruleId":"48","severity":1,"message":"49","line":2,"column":22,"nodeType":"50","messageId":"51","endLine":2,"endColumn":26},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar"]